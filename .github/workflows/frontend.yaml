# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


jobs:
  build:

    env:
      PR_PATH: pull/${{github.event.number}}

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: frontend

    strategy:
      matrix:
        node-version: [ 20.16.0 ]

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: 'frontend/package-lock.json'
    - name: Install dependencies
      run: npm install
#    - name: Lint
#      run: npm run lint
    - name: Unit tests
      run: npm run test:unit
    - name: Format
      run: npm run format
    - name: Build
      run: npm run build

    - name: Upload static files as artifact
      id: deployment
      uses: actions/upload-pages-artifact@v3 # or specific "vX.X.X" version tag for this action
      with:
        path: ./frontend/dist
    # - name: deploy
      # uses: peaceiris/actions-gh-pages@v4
      # if: github.ref != 'refs/heads/main'
      # with:
      #   github_token: ${{ secrets.GITHUB_TOKEN }}
      #   publish_dir: ./frontend/dist
      #   destination_dir: ${{ env.PR_PATH }}

  # Deployment job
  deploy:
    permissions:
      id-token: write
      pages: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build
    steps: # only deploy on main
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
